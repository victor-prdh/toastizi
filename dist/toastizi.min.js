!function (t, o) { "function" == typeof define && define.amd ? define(o) : "object" == typeof exports ? module.exports = o() : t.toastizi = o() }(this, function () { function t(t) { this.toast = "test", this.options = function () { for (var t = 1; t < arguments.length; t++)for (var o in arguments[t]) arguments[t].hasOwnProperty(o) && (arguments[0][o] = arguments[t][o]); return arguments[0] }({}, { content: "You dont set content for this toast", closeButton: !0, autoClose: !0, autoCloseTime: 8e3, backgroundColor: "#fff", color: "#000" }, t), this.init() } return t.prototype.init = function () { var t = random(7); if (this.options.closeButton) { this.toast = document.createElement("div"), this.toast.classList.add("toastizi"), this.toast.id = t; var o = document.createElement("div"); o.classList.add("toastizi-content"), o.innerText = this.options.content, this.toast.appendChild(o); var s = document.createElement("div"); s.addEventListener("click", function (o) { document.querySelector("#" + t).classList.remove("toastizi-show") }), s.classList.add("toastizi-close-btn"); var e = document.createElement("div"); e.classList.add("toastizi-close-content"), e.innerText = "Ã—", s.appendChild(e), this.toast.appendChild(s) } else this.toast = document.createElement("div"), this.toast.classList.add("toastizi"), this.toast.innerText = this.options.content; return this.toast.style.backgroundColor = this.options.backgroundColor, this.toast.style.color = this.options.color, document.body.appendChild(this.toast), this }, t.prototype.open = function () { this.toast.classList.add("toastizi-show"), this.options.autoClose && setTimeout(() => { this.close() }, this.options.autoCloseTime) }, t.prototype.close = function () { this.toast.classList.remove("toastizi-show") }, { toast: t } }); const random = (t = 8) => { let o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", s = ""; for (let e = 0; e < t; e++)s += o.charAt(Math.floor(Math.random() * o.length)); return s };